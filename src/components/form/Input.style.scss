@import "../../styles/helpers";

.input {

  $padding: $xs;

  @include box(true, $primary);
  display: flex;
  z-index: 1;
  align-items: stretch;


  &:has(&__control:focus) {
    border: 1px solid borderColor($primary, true);
  }

  &--not-valid {
    border: 1px solid borderColor($error, true);
  }

  &__left, &__right {
    display: flex;
    align-items: stretch;

    &--action {
      padding: 0;
    }

    &--placeholder {
      @include box(false, $secondary);
      padding: $padding;
    }

  }

  &__left {
    &--icon {
      align-items: center;
      padding: $padding 0 $padding $padding;
    }
  }

  &__right {
    &--icon {
      align-items: center;
      padding: $padding $padding $padding 0;
    }
  }

  &__control {
    background: none;
    border: none;
    outline: none;
    padding: $padding $padding;
    flex: 1;
    box-shadow: none;
    font-size: $sm;
    color: rgba($white, .5);
  }


  &__label {
    text-transform: uppercase;
    color: rgba($white, .5);
    font-size: $xs;
    //margin: $padding 0;
    display: block;
  }

  &__description {
    color: rgba($white, .5);
    font-size: $sm;
    margin: $padding/2 0 $padding;
    display: block;
  }

  &__message {
    @include box(false, $error);
    border-top-right-radius: 0;
    border-top-left-radius: 0;
    padding: $padding * 2 $padding $padding;
    top: -$padding;
    z-index: 0;
    display: flex;
    align-items: center;
    font-size: $xs;
    gap: $padding;

    > svg {
      width: $xs;
      height: $xs;
    }
  }

}

.radio-input {

  $padding: $xxs;

  background: backgroundColor($secondary) !important;
  border-radius: 0 !important;
  border: none !important;
  align-items: center;
  box-sizing: border-box;
  gap: $xxs;
  padding: $padding 0;

  .input__control {

    $size: $sm;

    position: relative;
    flex: none;
    box-sizing: border-box;
    padding: 0;
    margin: 1px 0;
    width: $size;
    height: $size;

    appearance: none;
    outline: none;

    background-color: transparent;
    border: 1px solid borderColor($secondary, true);
    border-radius: 50%;

    &:checked {
      border-color: borderColor($info, true);

      &:before {
        content: "";
        position: absolute;
        left: 50%;
        border-radius: 50%;
        top: 50%;
        transform: translateX(-50%) translateY(-50%);
        width: $size/2;
        height: $size/2;
        background: backgroundColor($info);
      }
    }

  }

}